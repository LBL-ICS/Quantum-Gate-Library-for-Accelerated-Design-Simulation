[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(FPU_Test.TestFPmult, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestNo_Op, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestPauliZ, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Permutation_Test.InitialSwitch1_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Permutation_Test.PermutationMux1_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Test4, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.MeasureGate1_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestPauliY, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestInverseSGate, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.QSR_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Test2, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestNormalization, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.CompareRandom_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestCNOT, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.LinearCongruence_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.MeasureGate0_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mInitialSwitch1_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPermutationMux1_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mpermutation1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GeneratePattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSwitchPermutation1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestFPmult:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMultiplier[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should outputNum[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GeneratePattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestPauliZ:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPauliZ[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Make1Negative[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mLinearCongruence_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mLinearCongruence[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should RNG[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSR_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mRegister[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should ProperlyUpdate[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestPauliX, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestSGate, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestUnnormalizedState, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Controller_Test.AlgManager_Test2, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Permutation_Test.InitialSwitch0_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.QGPTest2, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Test1, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestCPauliZ, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Permutation_Test.PermutationMux0_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Permutation_Test.StackedPermutationSwitchGrid_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Controller_Test.ControllerTest, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestNormalization:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNormalization[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should getNormalizationValue[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.QGPTest1, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestCollectProbability, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestCPauliY, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.QGPTest3, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Test3, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.Gates.TestToffoli, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Permutation_Test.StackedMuxPermutation_Test, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(FPU_Test.TestFPSqrt, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.Controller_Test.AlgManager_Test1, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(QSU_Test.QSU_Architecture.QGPMuxLayerCheck, org.scalatest.tools.Framework$$anon$1@728e95e8, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCompareRandom_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCompareToRand[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Produce0or1[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestNo_Op:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNo_Op[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should DoNothing[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestPauliY:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPauliY[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should SwitchAndBecomeImaginary[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestInverseSGate:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mInverseSGate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Make1NegativeImaginary[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestCNOT:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCNOT[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should SwitchSecond[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestUnnormalizedState:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMux[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should removeProbability[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestSGate:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSGate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Make1Imaginary[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestPauliX:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPauliX[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Switch[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAlgManager_Test2:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAlgManager[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should sendEnProperly *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  In step 2: io_out_newState=false (0, 0x0) did not equal expected=true (1, 0x1) at (AlgManager_Test.scala:141) (AlgManager_Test.scala:141)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mInitialSwitch0_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSwitchPermutation0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GeneratePattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mControllerTest:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mController[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GiveCorrectOutputs[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestCPauliZ:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCPauliZ[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should MakeVeryLastNegative[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPermutationMux0_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMuxPermutation[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GeneratePattern[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStackedPermutationSwitchGrid_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mPermutationGrids[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should createCorrectPermutation[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestCPauliY:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCPauliY[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Switch&TurnImaginarySecondVector[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMeasureGate1_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMeasureGate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GiveNormalizationValue[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestToffoli:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mToffoli[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should SwitchLast[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mStackedMuxPermutation_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mpermutationLayers[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should notMakeMeMourn[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestFPSqrt:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mSqrt[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should outputNum[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAlgManager_Test1:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAlgManager[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Count[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQGPMuxLayerCheck:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMuxLayer[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should SwitchBetweenVectors[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTestCollectProbability:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mCollapse[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GiveProbability[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMeasureGate0_Test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mMeasureGate[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should produceNewQSVandNormalization[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQGPTest1:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGates[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should GenerateNewState[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU_Test1:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should DoGateOperations[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQGPTest2:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGates[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should multiply[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQGPTest3:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mGates[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should measureQ0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU_Test4:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Normalize State, then apply gates[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU_Test3:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should Create state, then mesure[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU_Test2:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mQSU[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should notGenerateError[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 17 minutes, 10 seconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 37[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 37, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 36, failed 1, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 1 TEST FAILED ***[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	FPU_Test.TestFPSqrt[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Test1[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Controller_Test.ControllerTest[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestUnnormalizedState[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestPauliZ[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Permutation_Test.StackedMuxPermutation_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.QGPTest2[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.QGPMuxLayerCheck[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Test2[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.LinearCongruence_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.QGPTest3[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestInverseSGate[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Permutation_Test.InitialSwitch0_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestSGate[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestPauliX[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.MeasureGate1_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.CompareRandom_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Permutation_Test.StackedPermutationSwitchGrid_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestCPauliY[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Controller_Test.AlgManager_Test1[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.MeasureGate0_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	FPU_Test.TestFPmult[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestNormalization[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Permutation_Test.PermutationMux1_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestCollectProbability[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Test3[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestToffoli[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.QSR_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestPauliY[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestCPauliZ[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestCNOT[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Permutation_Test.PermutationMux0_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.QGPTest1[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.Gates.TestNo_Op[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Architecture.Permutation_Test.InitialSwitch1_Test[0m
[0m[[0m[0mdebug[0m] [0m[0m	QSU_Test.QSU_Test4[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	QSU_Test.QSU_Architecture.Controller_Test.AlgManager_Test2[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
