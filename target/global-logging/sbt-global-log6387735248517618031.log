[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jerem\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jerem\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Adoptium Java 11.0.27)
[debug] Load.defaultLoad until apply took 466.5542ms
[debug]           Load.loadUnit: plugins took 125.7252ms
[debug]           Load.loadUnit: defsScala took 0.6383ms
[debug] [Loading] Scanning directory C:\Projects\NSF-REU\Quantum-Computing-Simulation\project
[debug]             Load.loadUnit: mkEval took 7.4769ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Projects\NSF-REU\Quantum-Computing-Simulation\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.9672 ms
[info] loading settings for project quantum-computing-simulation-build from idea.sbt ...
[debug]               Load.resolveProject(quantum-computing-simulation-build) took 51.1506ms
[debug]             Load.loadTransitive: finalizeProject(Project(id quantum-computing-simulation-build, base: C:\Projects\NSF-REU\Quantum-Computing-Simulation\project, plugins: List(<none>))) took 82.9924ms
[debug] [Loading] Done in C:\Projects\NSF-REU\Quantum-Computing-Simulation\project, returning: (quantum-computing-simulation-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3387.8991ms
[debug]           Load.loadUnit: cleanEvalClasses took 71.0696ms
[debug]         Load.loadUnit(file:/C:/Projects/NSF-REU/Quantum-Computing-Simulation/project/, ...) took 3593.5974ms
[debug]       Load.apply: load took 3730.956ms
[debug]       Load.apply: resolveProjects took 5.7087ms
[debug]       Load.apply: finalTransforms took 84.1526ms
[debug]       Load.apply: config.delegates took 18.7585ms
[debug]       Load.apply: Def.make(settings)... took 689.0976ms
[debug]       Load.apply: structureIndex took 164.3197ms
[debug]       Load.apply: mkStreams took 6.3026ms
[info] loading project definition from C:\Projects\NSF-REU\Quantum-Computing-Simulation\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8799.5229ms
[debug]     Load.loadUnit: defsScala took 0.0075ms
[debug] [Loading] Scanning directory C:\Projects\NSF-REU\Quantum-Computing-Simulation
[debug]       Load.loadUnit: mkEval took 0.4841ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.GenerateAllManagedSourcesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.GenerateAllManagedSourcesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.jetbrains.sbt.GenerateAllManagedSourcesPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.4027 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 138.5009ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Projects\NSF-REU\Quantum-Computing-Simulation, plugins: List(<none>))) took 145.2913ms
[debug] [Loading] Done in C:\Projects\NSF-REU\Quantum-Computing-Simulation, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1478.1831ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.9487ms
[debug]   Load.loadUnit(file:/C:/Projects/NSF-REU/Quantum-Computing-Simulation/, ...) took 10289.3153ms
[debug] Load.apply: load took 10310.0885ms
[debug] Load.apply: resolveProjects took 0.1669ms
[debug] Load.apply: finalTransforms took 63.1644ms
[debug] Load.apply: config.delegates took 0.6668ms
[debug] Load.apply: Def.make(settings)... took 143.0394ms
[debug] Load.apply: structureIndex took 29.4063ms
[debug] Load.apply: mkStreams took 0.0041ms
[info] set current project to Quantum-Gate-Library-for-Accelerated-Design-Simulation (in build file:/C:/Projects/NSF-REU/Quantum-Computing-Simulation/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
