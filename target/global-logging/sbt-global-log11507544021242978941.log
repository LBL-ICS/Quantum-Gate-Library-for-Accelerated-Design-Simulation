[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jerem\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jerem\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Eclipse Adoptium Java 11.0.27)
[debug] Load.defaultLoad until apply took 506.8723ms
[debug]           Load.loadUnit: plugins took 96.468299ms
[debug]           Load.loadUnit: defsScala took 0.2524ms
[debug] [Loading] Scanning directory C:\Projects\NSF REU\Quantum-Computing-Simulation\project
[debug]             Load.loadUnit: mkEval took 6.8617ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Projects\NSF REU\Quantum-Computing-Simulation\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.8645 ms
[info] loading settings for project quantum-computing-simulation-build from idea.sbt ...
[debug]               Load.resolveProject(quantum-computing-simulation-build) took 52.560501ms
[debug]             Load.loadTransitive: finalizeProject(Project(id quantum-computing-simulation-build, base: C:\Projects\NSF REU\Quantum-Computing-Simulation\project, plugins: List(<none>))) took 80.069001ms
[debug] [Loading] Done in C:\Projects\NSF REU\Quantum-Computing-Simulation\project, returning: (quantum-computing-simulation-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3224.1238ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.1552ms
[debug]         Load.loadUnit(file:/C:/Projects/NSF%20REU/Quantum-Computing-Simulation/project/, ...) took 3332.729301ms
[debug]       Load.apply: load took 3503.226601ms
[debug]       Load.apply: resolveProjects took 5.724901ms
[debug]       Load.apply: finalTransforms took 73.180201ms
[debug]       Load.apply: config.delegates took 16.718ms
[debug]       Load.apply: Def.make(settings)... took 627.3858ms
[debug]       Load.apply: structureIndex took 185.8047ms
[debug]       Load.apply: mkStreams took 5.279999ms
[info] loading project definition from C:\Projects\NSF REU\Quantum-Computing-Simulation\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8474.6806ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Projects\NSF REU\Quantum-Computing-Simulation
[debug]       Load.loadUnit: mkEval took 0.319299ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.GenerateAllManagedSourcesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.GenerateAllManagedSourcesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,org.jetbrains.sbt.GenerateAllManagedSourcesPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2987 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 114.0673ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Projects\NSF REU\Quantum-Computing-Simulation, plugins: List(<none>))) took 118.933301ms
[debug] [Loading] Done in C:\Projects\NSF REU\Quantum-Computing-Simulation, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1411.308299ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.529ms
[debug]   Load.loadUnit(file:/C:/Projects/NSF%20REU/Quantum-Computing-Simulation/, ...) took 9895.057101ms
[debug] Load.apply: load took 9912.861099ms
[debug] Load.apply: resolveProjects took 0.111399ms
[debug] Load.apply: finalTransforms took 67.835101ms
[debug] Load.apply: config.delegates took 0.6307ms
[debug] Load.apply: Def.make(settings)... took 119.288301ms
[debug] Load.apply: structureIndex took 24.9185ms
[debug] Load.apply: mkStreams took 0.0046ms
[info] set current project to Quantum-Gate-Library-for-Accelerated-Design-Simulation (in build file:/C:/Projects/NSF%20REU/Quantum-Computing-Simulation/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
