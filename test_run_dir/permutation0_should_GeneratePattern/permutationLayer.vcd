$date
2025-06-25T15:30+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module permutationLayer $end
 $var wire 1 A reset $end
 $var wire 1 B tieVectorLayer $end
 $var wire 3 p io_in_QSV_4 $end
 $var wire 3 q io_in_QSV_5 $end
 $var wire 3 r io_in_QSV_6 $end
 $var wire 3 s io_in_QSV_7 $end
 $var wire 3 t io_in_QSV_0 $end
 $var wire 3 u io_in_QSV_1 $end
 $var wire 3 v io_in_QSV_2 $end
 $var wire 3 x io_in_QSV_3 $end
 $var wire 1 "+ clock $end
 $var wire 1 "/ untieVectorLayer $end
 $var wire 3 "0 io_out_QSV_5 $end
 $var wire 1 "1 muxLayer1 $end
 $var wire 3 "2 io_out_QSV_6 $end
 $var wire 3 "3 io_out_QSV_7 $end
 $var wire 2 "L io_in_sel $end
 $var wire 3 "M io_out_QSV_0 $end
 $var wire 3 "N io_out_QSV_1 $end
 $var wire 3 "O io_out_QSV_2 $end
 $var wire 3 "P io_out_QSV_3 $end
 $var wire 3 "Q io_out_QSV_4 $end
  $scope module tieVectorLayer.tieVector_0 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_1 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_2 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_3 $end
  $upscope $end
  $scope module tieVectorLayer $end
   $var wire 3 X io_in_QSV_7 $end
   $var wire 3 [ io_in_QSV_6 $end
   $var wire 3 ] io_in_QSV_5 $end
   $var wire 3 _ io_in_QSV_4 $end
   $var wire 3 a io_in_QSV_3 $end
   $var wire 3 c io_in_QSV_2 $end
   $var wire 3 e io_in_QSV_1 $end
   $var wire 3 g io_in_QSV_0 $end
   $var wire 1 l tieVector_0 $end
   $var wire 1 m tieVector_1 $end
   $var wire 1 n tieVector_2 $end
   $var wire 1 o tieVector_3 $end
   $var wire 3 y io_out_QSV_6 $end
   $var wire 1 z tieVector_4 $end
   $var wire 3 { io_out_QSV_5 $end
   $var wire 1 | tieVector_5 $end
   $var wire 1 } tieVector_6 $end
   $var wire 3 ~ io_out_QSV_7 $end
   $var wire 1 "! tieVector_7 $end
   $var wire 3 "" io_out_QSV_2 $end
   $var wire 3 "# io_out_QSV_1 $end
   $var wire 3 "$ io_out_QSV_4 $end
   $var wire 3 "% io_out_QSV_3 $end
   $var wire 3 "' io_out_QSV_0 $end
    $scope module tieVector_6 $end
     $var wire 3 " io_out $end
     $var wire 3 % inputs_0 $end
     $var wire 3 + io_in_0 $end
    $upscope $end
    $scope module tieVector_7 $end
     $var wire 3 # io_out $end
     $var wire 3 2 inputs_0 $end
     $var wire 3 E io_in_0 $end
    $upscope $end
    $scope module tieVector_5 $end
     $var wire 3 $ io_out $end
     $var wire 3 "9 inputs_0 $end
     $var wire 3 "A io_in_0 $end
    $upscope $end
    $scope module tieVector_0 $end
     $var wire 3 0 inputs_0 $end
     $var wire 3 i io_out $end
     $var wire 3 "- io_in_0 $end
    $upscope $end
    $scope module tieVector_2 $end
     $var wire 3 1 io_in_0 $end
     $var wire 3 D inputs_0 $end
     $var wire 3 "K io_out $end
    $upscope $end
    $scope module tieVector_1 $end
     $var wire 3 4 inputs_0 $end
     $var wire 3 @ io_out $end
     $var wire 3 "I io_in_0 $end
    $upscope $end
    $scope module tieVector_3 $end
     $var wire 3 < io_out $end
     $var wire 3 V io_in_0 $end
     $var wire 3 "( inputs_0 $end
    $upscope $end
    $scope module tieVector_4 $end
     $var wire 3 T inputs_0 $end
     $var wire 3 h io_out $end
     $var wire 3 "* io_in_0 $end
    $upscope $end
  $upscope $end
  $scope module muxLayer1 $end
   $var wire 3 ' io_in_QSV_1_5 $end
   $var wire 3 ( io_in_QSV_1_4 $end
   $var wire 3 ) io_in_QSV_1_7 $end
   $var wire 3 * io_in_QSV_1_6 $end
   $var wire 3 , io_in_QSV_1_1 $end
   $var wire 3 - io_in_QSV_1_0 $end
   $var wire 3 . io_in_QSV_1_3 $end
   $var wire 3 / io_in_QSV_1_2 $end
   $var wire 3 7 io_in_QSV_2_7 $end
   $var wire 3 F io_in_QSV_2_4 $end
   $var wire 3 G io_in_QSV_2_3 $end
   $var wire 3 H io_in_QSV_2_6 $end
   $var wire 3 I io_in_QSV_2_5 $end
   $var wire 3 J io_in_QSV_2_0 $end
   $var wire 3 K io_in_QSV_2_2 $end
   $var wire 3 L io_in_QSV_2_1 $end
   $var wire 3 M io_out_QSV_3 $end
   $var wire 3 N io_out_QSV_4 $end
   $var wire 3 O io_out_QSV_5 $end
   $var wire 3 P io_out_QSV_6 $end
   $var wire 3 Q io_out_QSV_0 $end
   $var wire 3 R io_out_QSV_1 $end
   $var wire 3 S io_out_QSV_2 $end
   $var wire 3 Z io_out_QSV_7 $end
   $var wire 2 "& io_in_sel $end
   $var wire 3 "4 io_in_QSV_0_6 $end
   $var wire 3 "5 io_in_QSV_0_5 $end
   $var wire 3 "6 io_in_QSV_0_7 $end
   $var wire 3 "8 io_in_QSV_0_2 $end
   $var wire 3 "; io_in_QSV_0_1 $end
   $var wire 3 "= io_in_QSV_0_4 $end
   $var wire 3 "? io_in_QSV_0_3 $end
   $var wire 3 "D io_in_QSV_0_0 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_4 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_5 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_6 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_7 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_7 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_6 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_5 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_4 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_3 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_2 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_1 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_0 $end
  $upscope $end
  $scope module untieVectorLayer $end
   $var wire 3 5 io_in_QSV_7 $end
   $var wire 3 6 io_in_QSV_4 $end
   $var wire 3 8 io_in_QSV_3 $end
   $var wire 3 9 io_in_QSV_6 $end
   $var wire 3 : io_in_QSV_5 $end
   $var wire 3 ; io_in_QSV_0 $end
   $var wire 3 = io_in_QSV_2 $end
   $var wire 3 ? io_in_QSV_1 $end
   $var wire 3 U io_out_QSV_1 $end
   $var wire 3 W io_out_QSV_0 $end
   $var wire 3 Y io_out_QSV_3 $end
   $var wire 3 \ io_out_QSV_2 $end
   $var wire 3 ^ io_out_QSV_5 $end
   $var wire 3 ` io_out_QSV_4 $end
   $var wire 3 b io_out_QSV_7 $end
   $var wire 3 d io_out_QSV_6 $end
   $var wire 1 "7 untieVector_7 $end
   $var wire 1 ": untieVector_6 $end
   $var wire 1 "< untieVector_5 $end
   $var wire 1 "> untieVector_4 $end
   $var wire 1 "@ untieVector_3 $end
   $var wire 1 "B untieVector_2 $end
   $var wire 1 "C untieVector_1 $end
   $var wire 1 "E untieVector_0 $end
    $scope module untieVector_2 $end
     $var wire 3 ! io_in $end
     $var wire 3 w io_out_0 $end
    $upscope $end
    $scope module untieVector_5 $end
     $var wire 3 & io_out_0 $end
     $var wire 3 > io_in $end
    $upscope $end
    $scope module untieVector_6 $end
     $var wire 3 3 io_out_0 $end
     $var wire 3 f io_in $end
    $upscope $end
    $scope module untieVector_7 $end
     $var wire 3 C io_in $end
     $var wire 3 ". io_out_0 $end
    $upscope $end
    $scope module untieVector_4 $end
     $var wire 3 j io_out_0 $end
     $var wire 3 "F io_in $end
    $upscope $end
    $scope module untieVector_0 $end
     $var wire 3 k io_in $end
     $var wire 3 "H io_out_0 $end
    $upscope $end
    $scope module untieVector_1 $end
     $var wire 3 ") io_in $end
     $var wire 3 ", io_out_0 $end
    $upscope $end
    $scope module untieVector_3 $end
     $var wire 3 "G io_out_0 $end
     $var wire 3 "J io_in $end
    $upscope $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
0A
0B
0l
0m
0n
0o
0z
0|
0}
0"!
0"+
0"/
0"1
0"7
b000 "P
b000 "Q
0":
0"<
0">
0"@
b000 w
0"B
b000 v
0"C
b000 y
b000 x
0"E
b000 s
b000 r
b000 u
b000 t
b000 ~
b000 {
b00 "L
b000 g
b000 f
b000 i
b000 h
b000 c
b000 b
b000 e
b000 d
b000 q
b000 p
b000 k
b000 j
b000 W
b000 V
b000 Y
b000 X
b000 S
b000 R
b000 U
b00 "&
b000 T
b000 _
b000 ^
b000 a
b000 `
b000 [
b000 Z
b000 ]
b000 \
b000 G
b000 F
b000 I
b000 H
b000 C
b000 E
b000 D
b000 O
b000 N
b000 Q
b000 P
b000 K
b000 J
b000 M
b000 L
b000 7
b000 "'
b000 6
b000 "$
b000 9
b000 "%
b000 8
b000 ""
b000 3
b000 "#
b000 2
b000 5
b000 4
b000 ".
b000 ?
b000 >
b000 ",
b000 "-
b000 @
b000 "*
b000 ;
b000 :
b000 "(
b000 =
b000 ")
b000 <
b000 "6
b000 '
b000 &
b000 "4
b000 )
b000 "5
b000 (
b000 "2
b000 #
b000 "3
b000 "
b000 "0
b000 %
b000 $
b000 /
b000 "?
b000 .
b000 1
b000 "=
b000 0
b000 +
b000 ";
b000 *
b000 "8
b000 -
b000 "9
b000 ,
b000 "F
b000 "G
b000 "D
b000 "A
b000 "N
b000 "O
b000 !
b000 "M
b000 "J
b000 "K
b000 "H
b000 "I
$end
#0
1A
#1
1"+
#6
b010 !
b110 "
b111 #
b101 $
b110 %
b101 &
b110 '
b100 (
b111 )
b101 *
b110 +
b010 ,
b011 .
b001 /
b010 1
b111 2
b110 3
b001 4
b111 5
b100 6
b111 7
b011 8
b110 9
b101 :
b011 <
b010 =
b101 >
b001 ?
b001 @
b010 ""
0A
b001 "#
b100 "$
b111 C
b011 "%
b010 D
b111 E
b001 F
b011 "(
b110 G
b001 ")
b011 H
b100 "*
b101 I
0"+
b001 ",
b010 K
b100 L
b111 ".
b011 M
b100 N
b101 "0
b101 O
b110 P
b110 "2
b111 "3
b001 R
b110 "4
b010 S
b101 "5
b100 T
b111 "6
b001 U
b011 V
b010 "8
b101 "9
b111 X
b011 Y
b001 ";
b111 Z
b110 [
b100 "=
b010 \
b101 ]
b011 "?
b101 ^
b100 _
b101 "A
b100 `
b011 a
b111 b
b010 c
b110 d
b100 "F
b001 e
b011 "G
b110 f
b001 "I
b100 h
b011 "J
b010 "K
b100 j
b001 "N
b010 "O
b011 "P
b100 "Q
b100 p
b101 q
b110 r
b111 s
b001 u
b010 v
b010 w
b011 x
b110 y
b101 {
b111 ~
#11
1"+
#16
0"+
#21
1"+
#26
b01 "&
b010 ")
0"+
b010 ",
b110 "0
b110 O
b101 P
b101 "2
b010 R
b001 S
b010 U
b001 \
b110 ^
b001 !
b101 d
b110 &
b101 f
b01 "L
b010 "N
b001 "O
b101 3
b001 w
b101 9
b110 :
b001 =
b110 >
b010 ?
#31
1"+
#36
b10 "&
b100 ")
0"+
b100 ",
b110 M
b001 N
b101 "0
b101 O
b011 P
b011 "2
b100 R
b010 S
b100 U
b110 Y
b010 \
b101 ^
b001 `
b010 !
b011 d
b001 "F
b110 "G
b101 &
b011 f
b110 "J
b001 j
b10 "L
b100 "N
b010 "O
b110 "P
b001 "Q
b011 3
b001 6
b010 w
b110 8
b011 9
b101 :
b010 =
b101 >
b100 ?
