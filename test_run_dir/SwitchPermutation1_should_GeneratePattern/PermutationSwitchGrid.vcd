$date
2025-07-03T14:33+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module PermutationSwitchGrid $end
 $var wire 1 7 reset $end
 $var wire 1 = tieVectorLayer $end
 $var wire 3 [ io_in_QSV_4 $end
 $var wire 3 \ io_in_QSV_5 $end
 $var wire 3 ] io_in_QSV_6 $end
 $var wire 3 ^ io_in_QSV_7 $end
 $var wire 3 _ io_in_QSV_0 $end
 $var wire 3 ` io_in_QSV_1 $end
 $var wire 3 a io_in_QSV_2 $end
 $var wire 3 c io_in_QSV_3 $end
 $var wire 1 e switchGrid_io_in_sel_shiftAmount $end
 $var wire 1 m clock $end
 $var wire 1 u untieVectorLayer $end
 $var wire 3 w io_out_QSV_5 $end
 $var wire 3 x io_out_QSV_6 $end
 $var wire 3 y io_out_QSV_7 $end
 $var wire 1 "$ switchGrid $end
 $var wire 1 "5 io_in_sel $end
 $var wire 3 "6 io_out_QSV_0 $end
 $var wire 3 "7 io_out_QSV_1 $end
 $var wire 3 "8 io_out_QSV_2 $end
 $var wire 3 "9 io_out_QSV_3 $end
 $var wire 3 ": io_out_QSV_4 $end
  $scope module tieVectorLayer.tieVector_0 $end
  $upscope $end
  $scope module switchGrid.switch_0 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_1 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_2 $end
  $upscope $end
  $scope module tieVectorLayer.tieVector_3 $end
  $upscope $end
  $scope module tieVectorLayer $end
   $var wire 3 F io_in_QSV_7 $end
   $var wire 3 H io_in_QSV_6 $end
   $var wire 3 J io_in_QSV_5 $end
   $var wire 3 L io_in_QSV_4 $end
   $var wire 3 N io_in_QSV_3 $end
   $var wire 3 P io_in_QSV_2 $end
   $var wire 3 R io_in_QSV_1 $end
   $var wire 3 S io_in_QSV_0 $end
   $var wire 1 V tieVector_0 $end
   $var wire 1 X tieVector_1 $end
   $var wire 1 Y tieVector_2 $end
   $var wire 1 Z tieVector_3 $end
   $var wire 6 f io_out_QSV_2 $end
   $var wire 6 g io_out_QSV_1 $end
   $var wire 6 h io_out_QSV_3 $end
   $var wire 6 i io_out_QSV_0 $end
    $scope module tieVector_0 $end
     $var wire 3 & inputs_0 $end
     $var wire 3 ' inputs_1 $end
     $var wire 6 T io_out $end
     $var wire 3 s io_in_0 $end
     $var wire 3 t io_in_1 $end
    $upscope $end
    $scope module tieVector_2 $end
     $var wire 3 ) io_in_0 $end
     $var wire 3 0 io_in_1 $end
     $var wire 3 @ inputs_1 $end
     $var wire 3 A inputs_0 $end
     $var wire 6 "4 io_out $end
    $upscope $end
    $scope module tieVector_1 $end
     $var wire 3 + inputs_1 $end
     $var wire 3 - inputs_0 $end
     $var wire 6 5 io_out $end
     $var wire 3 ") io_in_1 $end
     $var wire 3 "* io_in_0 $end
    $upscope $end
    $scope module tieVector_3 $end
     $var wire 6 2 io_out $end
     $var wire 3 C io_in_0 $end
     $var wire 3 E io_in_1 $end
     $var wire 3 j inputs_0 $end
     $var wire 3 k inputs_1 $end
    $upscope $end
  $upscope $end
  $scope module switchGrid.wireL_1 $end
  $upscope $end
  $scope module switchGrid.wireL_0 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_3 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_2 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_1 $end
  $upscope $end
  $scope module untieVectorLayer.untieVector_0 $end
  $upscope $end
  $scope module switchGrid $end
   $var wire 6 ( io_out_QSV_2 $end
   $var wire 6 * io_out_QSV_1 $end
   $var wire 6 , io_out_QSV_3 $end
   $var wire 2 . io_in_sel $end
   $var wire 6 9 io_out_QSV_0 $end
   $var wire 6 : io_in_QSV_2 $end
   $var wire 6 ; io_in_QSV_3 $end
   $var wire 6 < io_in_QSV_0 $end
   $var wire 6 > io_in_QSV_1 $end
   $var wire 1 W switch_0 $end
   $var wire 1 | wireL_1 $end
   $var wire 1 } wireL_0 $end
    $scope module wireL_1 $end
     $var wire 6 " io_input_0 $end
     $var wire 6 # io_input_2 $end
     $var wire 6 $ io_input_1 $end
     $var wire 6 % io_input_3 $end
     $var wire 6 ". io_output_2 $end
     $var wire 6 "0 io_output_3 $end
     $var wire 6 "1 io_output_0 $end
     $var wire 6 "2 io_output_1 $end
    $upscope $end
    $scope module switch_0 $end
     $var wire 6 6 io_input_0 $end
     $var wire 6 8 io_input_1 $end
     $var wire 1 v io_in_sel $end
     $var wire 6 z io_output_0 $end
     $var wire 6 { io_output_1 $end
    $upscope $end
    $scope module wireL_0 $end
     $var wire 6 n io_input_0 $end
     $var wire 6 o io_input_1 $end
     $var wire 6 q io_input_2 $end
     $var wire 6 r io_input_3 $end
     $var wire 6 "+ io_output_2 $end
     $var wire 6 ", io_output_1 $end
     $var wire 6 "/ io_output_0 $end
     $var wire 6 "3 io_output_3 $end
    $upscope $end
  $upscope $end
  $scope module untieVectorLayer $end
   $var wire 6 / io_in_QSV_3 $end
   $var wire 6 1 io_in_QSV_0 $end
   $var wire 6 3 io_in_QSV_2 $end
   $var wire 6 4 io_in_QSV_1 $end
   $var wire 3 B io_out_QSV_1 $end
   $var wire 3 D io_out_QSV_0 $end
   $var wire 3 G io_out_QSV_3 $end
   $var wire 3 I io_out_QSV_2 $end
   $var wire 3 K io_out_QSV_5 $end
   $var wire 3 M io_out_QSV_4 $end
   $var wire 3 O io_out_QSV_7 $end
   $var wire 3 Q io_out_QSV_6 $end
   $var wire 1 ~ untieVector_3 $end
   $var wire 1 "! untieVector_2 $end
   $var wire 1 "" untieVector_1 $end
   $var wire 1 "# untieVector_0 $end
    $scope module untieVector_2 $end
     $var wire 6 ! io_in $end
     $var wire 3 b io_out_0 $end
     $var wire 3 d io_out_1 $end
    $upscope $end
    $scope module untieVector_1 $end
     $var wire 3 ? io_out_1 $end
     $var wire 6 l io_in $end
     $var wire 3 p io_out_0 $end
    $upscope $end
    $scope module untieVector_0 $end
     $var wire 6 U io_in $end
     $var wire 3 "& io_out_1 $end
     $var wire 3 "' io_out_0 $end
    $upscope $end
    $scope module untieVector_3 $end
     $var wire 3 "% io_out_0 $end
     $var wire 3 "( io_out_1 $end
     $var wire 6 "- io_in $end
    $upscope $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
07
b00 .
0=
0V
0W
0X
0Y
0Z
0e
0m
b000000 6
b000000 9
b000000 8
b000000 ;
0u
b000000 :
0v
b000000 <
b000000 /
b000000 1
0|
b000000 3
0}
b000000 2
0~
b000000 5
b000000 4
b000000 (
b000000 *
b000000 ,
b000000 !
b000000 #
b000000 "
b000000 %
b000000 $
0"!
0""
0"#
0"$
0"5
b000000 {
b000000 z
b000000 o
b000000 n
b000000 q
b000000 r
b000 w
b000000 g
b000000 f
b000 y
b000000 i
b000 x
b000000 h
b000 s
b000 t
b000000 l
b000 c
b000 b
b000 d
b000000 "4
b000 p
b000 k
b000 j
b000000 U
b000000 T
b000000 ",
b000000 "-
b000000 ".
b000000 "/
b000 S
b000000 "0
b000 R
b000000 "1
b000000 "2
b000000 "3
b000 _
b000 ^
b000000 >
b000 a
b000 `
b000 [
b000 ]
b000 \
b000000 "+
b000 G
b000 F
b000 I
b000 H
b000 C
b000 B
b000 E
b000 D
b000 O
b000 N
b000 Q
b000 P
b000 K
b000 J
b000 M
b000 L
b000 "&
b000 "'
b000 "%
b000 ?
b000 A
b000 @
b000 "*
b000 "(
b000 ")
b000 "6
b000 '
b000 "7
b000 &
b000 )
b000 0
b000 ":
b000 +
b000 "8
b000 -
b000 "9
$end
#0
17
b01 .
#1
1m
#6
b101100 !
b001000 "
b101100 #
b011010 $
b111110 %
b001 '
b101100 (
b100 )
b011010 *
b011 +
b111110 ,
b010 -
b111110 /
b101 0
b001000 1
b111110 2
b101100 3
b011010 4
b011010 5
b101100 6
07
b011010 8
b001000 9
b101100 :
b111110 ;
b001000 <
b011010 >
b011 ?
b101 @
b100 A
b001 B
b110 C
b110 "%
b001 "&
b111 E
b111 F
b111 "(
b011 G
b011 ")
b110 H
b010 "*
b010 I
b101100 "+
b101 J
b011010 ",
b101 K
b111110 "-
b100 L
b101100 ".
b100 M
b001000 "/
b011 N
b111110 "0
b111 O
b001000 "1
b010 P
b011010 "2
b110 Q
b111110 "3
b001 R
b101100 "4
b001000 T
b001000 U
b001 "7
b010 "8
b011 "9
b100 ":
b100 [
b101 \
b110 ]
b111 ^
b001 `
b010 a
b100 b
b011 c
b101 d
b101100 f
b011010 g
b111110 h
b001000 i
b110 j
b111 k
b011010 l
0m
b001000 n
b011010 o
b010 p
b101100 q
b111110 r
b001 t
b101 w
b110 x
b111 y
b101100 z
b011010 {
#11
1m
#16
0m
#21
1m
#26
b101 G
b100 I
b011 K
b011010 ".
b010 M
b101100 "2
1"5
b100 "8
b101 "9
b010 ":
b011010 !
b010 b
b011010 #
b101100 $
b011 d
1e
b011010 (
b101100 *
b101100 l
0m
b10 .
b100 p
b011010 3
b101100 4
1v
b011 w
b011010 z
b101100 {
b101 ?
#31
1m
#36
0m
