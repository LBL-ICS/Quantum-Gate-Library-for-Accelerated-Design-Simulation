FIRRTL version 1.2.0
circuit AlgorithmManager :
  module AlgorithmManager : @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 15:7]
    input clock : Clock @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 15:7]
    input reset : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 15:7]
    input io_in_QSV_0 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_QSV_1 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_QSV_2 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_QSV_3 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Permutation_0 : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Permutation_1 : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Permutation_2 : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Permutation_3 : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Permutation_4 : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Gate_0 : UInt<3> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Gate_1 : UInt<3> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Gate_2 : UInt<3> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Gate_3 : UInt<3> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_Gate_4 : UInt<3> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_en_newData : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    input io_in_en_next : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_en_QSR : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_en_QGP : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_newState : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_endofAlg : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_sel_gate : UInt<3> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_sel_permutation : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_QSV_0 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_QSV_1 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_QSV_2 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]
    output io_out_QSV_3 : UInt<32> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 16:14]

    reg stop : UInt<1>, clock with :
      reset => (UInt<1>("h0"), stop) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 34:29]
    reg next : UInt<1>, clock with :
      reset => (UInt<1>("h0"), next) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 35:29]
    node _next_T = mux(stop, UInt<1>("h0"), io_in_en_next) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 36:25]
    node en_new_values = mux(stop, io_in_en_newData, UInt<1>("h0")) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 42:26]
    reg prev : UInt<1>, clock with :
      reset => (UInt<1>("h0"), prev) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 48:23]
    reg enable : UInt<1>, clock with :
      reset => (UInt<1>("h0"), enable) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 49:23]
    node _T = xor(next, prev) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 52:30]
    node _T_1 = or(en_new_values, _T) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 52:22]
    node _enable_T = not(enable) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 53:15]
    node _GEN_0 = mux(_T_1, _enable_T, enable) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 52:37 53:12 49:23]
    reg io_out_en_QGP_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_out_en_QGP_r) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 55:37]
    node _GEN_1 = mux(UInt<1>("h1"), enable, io_out_en_QGP_r) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 55:{37,37,37}]
    node update = mux(prev, UInt<1>("h0"), next) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 61:19]
    reg io_out_en_QSR_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_out_en_QSR_r) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 65:53]
    node _GEN_2 = mux(UInt<1>("h1"), update, io_out_en_QSR_r) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 65:{53,53,53}]
    node _io_out_en_QSR_T = or(en_new_values, io_out_en_QSR_r) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 65:38]
    reg cntEventsReg : UInt<3>, clock with :
      reset => (UInt<1>("h0"), cntEventsReg) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 70:30]
    node _cntEventsReg_T = add(cntEventsReg, UInt<1>("h1")) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 72:34]
    node _cntEventsReg_T_1 = tail(_cntEventsReg_T, 1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 72:34]
    node _GEN_3 = mux(update, _cntEventsReg_T_1, cntEventsReg) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 71:16 72:18 70:30]
    node _GEN_4 = mux(en_new_values, UInt<1>("h0"), _GEN_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 76:22 77:18]
    node _GEN_5 = mux(en_new_values, UInt<1>("h0"), stop) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 76:22 78:18 34:29]
    reg quantumGate_0 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), quantumGate_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 84:30]
    reg quantumGate_1 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), quantumGate_1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 84:30]
    reg quantumGate_2 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), quantumGate_2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 84:30]
    reg quantumGate_3 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), quantumGate_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 84:30]
    reg quantumGate_4 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), quantumGate_4) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 84:30]
    reg selPermutation_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), selPermutation_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 85:30]
    reg selPermutation_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), selPermutation_1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 85:30]
    reg selPermutation_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), selPermutation_2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 85:30]
    reg selPermutation_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), selPermutation_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 85:30]
    reg selPermutation_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), selPermutation_4) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 85:30]
    node _quantumGate_0_T = mux(en_new_values, io_in_Gate_0, quantumGate_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:29]
    node _selPermutation_0_T = mux(en_new_values, io_in_Permutation_0, selPermutation_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:29]
    node _quantumGate_1_T = mux(en_new_values, io_in_Gate_1, quantumGate_1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:29]
    node _selPermutation_1_T = mux(en_new_values, io_in_Permutation_1, selPermutation_1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:29]
    node _quantumGate_2_T = mux(en_new_values, io_in_Gate_2, quantumGate_2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:29]
    node _selPermutation_2_T = mux(en_new_values, io_in_Permutation_2, selPermutation_2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:29]
    node _quantumGate_3_T = mux(en_new_values, io_in_Gate_3, quantumGate_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:29]
    node _selPermutation_3_T = mux(en_new_values, io_in_Permutation_3, selPermutation_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:29]
    node _quantumGate_4_T = mux(en_new_values, io_in_Gate_4, quantumGate_4) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:29]
    node _selPermutation_4_T = mux(en_new_values, io_in_Permutation_4, selPermutation_4) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:29]
    node _GEN_6 = validif(eq(UInt<1>("h0"), cntEventsReg), quantumGate_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 92:{25,25}]
    node _GEN_7 = mux(eq(UInt<1>("h1"), cntEventsReg), quantumGate_1, _GEN_6) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 92:{25,25}]
    node _GEN_8 = mux(eq(UInt<2>("h2"), cntEventsReg), quantumGate_2, _GEN_7) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 92:{25,25}]
    node _GEN_9 = mux(eq(UInt<2>("h3"), cntEventsReg), quantumGate_3, _GEN_8) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 92:{25,25}]
    node _GEN_10 = mux(eq(UInt<3>("h4"), cntEventsReg), quantumGate_4, _GEN_9) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 92:{25,25}]
    node _GEN_11 = validif(eq(UInt<1>("h0"), cntEventsReg), selPermutation_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 93:{25,25}]
    node _GEN_12 = mux(eq(UInt<1>("h1"), cntEventsReg), selPermutation_1, _GEN_11) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 93:{25,25}]
    node _GEN_13 = mux(eq(UInt<2>("h2"), cntEventsReg), selPermutation_2, _GEN_12) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 93:{25,25}]
    node _GEN_14 = mux(eq(UInt<2>("h3"), cntEventsReg), selPermutation_3, _GEN_13) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 93:{25,25}]
    node _GEN_15 = mux(eq(UInt<3>("h4"), cntEventsReg), selPermutation_4, _GEN_14) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 93:{25,25}]
    node _T_2 = andr(io_out_sel_gate) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 97:24]
    node _GEN_16 = mux(_T_2, UInt<1>("h1"), _GEN_5) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 97:29 98:12]
    node _GEN_17 = mux(_T_2, UInt<1>("h0"), _GEN_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 97:29 99:12]
    node _quantumGate_cntEventsReg = _GEN_10 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 92:25]
    node _selPermutation_cntEventsReg = _GEN_15 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 93:25]
    io_out_en_QSR <= _io_out_en_QSR_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 65:21]
    io_out_en_QGP <= io_out_en_QGP_r @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 55:21]
    io_out_newState <= en_new_values @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 64:21]
    io_out_endofAlg <= stop @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 37:19]
    io_out_sel_gate <= _quantumGate_cntEventsReg @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 92:25]
    io_out_sel_permutation <= pad(_selPermutation_cntEventsReg, 2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 93:25]
    io_out_QSV_0 <= io_in_QSV_0 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 63:21]
    io_out_QSV_1 <= io_in_QSV_1 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 63:21]
    io_out_QSV_2 <= io_in_QSV_2 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 63:21]
    io_out_QSV_3 <= io_in_QSV_3 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 63:21]
    stop <= mux(reset, UInt<1>("h1"), _GEN_16) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 34:{29,29}]
    next <= mux(reset, UInt<1>("h0"), _next_T) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 35:{29,29} 36:19]
    prev <= mux(reset, UInt<1>("h0"), next) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 48:{23,23} 50:14]
    enable <= mux(reset, UInt<1>("h0"), _GEN_17) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 49:{23,23}]
    io_out_en_QGP_r <= _GEN_1
    io_out_en_QSR_r <= _GEN_2
    cntEventsReg <= mux(reset, UInt<3>("h0"), _GEN_4) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 70:{30,30}]
    quantumGate_0 <= _quantumGate_0_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:23]
    quantumGate_1 <= _quantumGate_1_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:23]
    quantumGate_2 <= _quantumGate_2_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:23]
    quantumGate_3 <= _quantumGate_3_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:23]
    quantumGate_4 <= _quantumGate_4_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 88:23]
    selPermutation_0 <= _selPermutation_0_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:23]
    selPermutation_1 <= _selPermutation_1_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:23]
    selPermutation_2 <= _selPermutation_2_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:23]
    selPermutation_3 <= _selPermutation_3_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:23]
    selPermutation_4 <= _selPermutation_4_T @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\AlgorithmManager.scala 89:23]
