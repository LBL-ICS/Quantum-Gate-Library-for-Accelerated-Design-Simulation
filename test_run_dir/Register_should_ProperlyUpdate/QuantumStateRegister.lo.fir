FIRRTL version 1.2.0
circuit QuantumStateRegister :
  module QuantumStateRegister : @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 28:7]
    input clock : Clock @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 28:7]
    input reset : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 28:7]
    input io_in_QSV_0 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_QSV_1 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_QSV_2 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_QSV_3 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_new_state_0 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_new_state_1 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_new_state_2 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_new_state_3 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_en : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    input io_in_en_new_state : UInt<1> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    output io_out_QSV_0 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    output io_out_QSV_1 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    output io_out_QSV_2 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]
    output io_out_QSV_3 : UInt<2> @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 29:14]

    reg QuantumStateReg_0 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), QuantumStateReg_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 37:28]
    reg QuantumStateReg_1 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), QuantumStateReg_1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 37:28]
    reg QuantumStateReg_2 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), QuantumStateReg_2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 37:28]
    reg QuantumStateReg_3 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), QuantumStateReg_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 37:28]
    node _QuantumStateReg_0_T = mux(io_in_en_new_state, io_in_new_state_0, io_in_QSV_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:44]
    node _QuantumStateReg_0_T_1 = mux(io_in_en, _QuantumStateReg_0_T, QuantumStateReg_0) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:30]
    node _QuantumStateReg_1_T = mux(io_in_en_new_state, io_in_new_state_1, io_in_QSV_1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:44]
    node _QuantumStateReg_1_T_1 = mux(io_in_en, _QuantumStateReg_1_T, QuantumStateReg_1) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:30]
    node _QuantumStateReg_2_T = mux(io_in_en_new_state, io_in_new_state_2, io_in_QSV_2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:44]
    node _QuantumStateReg_2_T_1 = mux(io_in_en, _QuantumStateReg_2_T, QuantumStateReg_2) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:30]
    node _QuantumStateReg_3_T = mux(io_in_en_new_state, io_in_new_state_3, io_in_QSV_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:44]
    node _QuantumStateReg_3_T_1 = mux(io_in_en, _QuantumStateReg_3_T, QuantumStateReg_3) @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:30]
    io_out_QSV_0 <= QuantumStateReg_0 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 44:19]
    io_out_QSV_1 <= QuantumStateReg_1 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 44:19]
    io_out_QSV_2 <= QuantumStateReg_2 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 44:19]
    io_out_QSV_3 <= QuantumStateReg_3 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 44:19]
    QuantumStateReg_0 <= _QuantumStateReg_0_T_1 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:24]
    QuantumStateReg_1 <= _QuantumStateReg_1_T_1 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:24]
    QuantumStateReg_2 <= _QuantumStateReg_2_T_1 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:24]
    QuantumStateReg_3 <= _QuantumStateReg_3_T_1 @[\\src\\main\\scala\\QuantumStateUnit\\QSU_Architecture\\QuantumStateRegister.scala 40:24]
