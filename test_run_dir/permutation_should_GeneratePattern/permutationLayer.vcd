$date
2025-06-19T19:53+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module permutationLayer $end
 $var wire 3 ! io_in_QSV_4 $end
 $var wire 3 " io_in_QSV_5 $end
 $var wire 3 # io_in_QSV_6 $end
 $var wire 3 $ io_in_QSV_7 $end
 $var wire 3 % io_in_QSV_0 $end
 $var wire 3 & io_in_QSV_1 $end
 $var wire 3 ' io_in_QSV_2 $end
 $var wire 3 ( io_in_QSV_3 $end
 $var wire 1 2 clock $end
 $var wire 1 4 reset $end
 $var wire 3 5 io_out_QSV_5 $end
 $var wire 1 6 muxLayer1 $end
 $var wire 3 7 io_out_QSV_6 $end
 $var wire 3 8 io_out_QSV_7 $end
 $var wire 2 P io_in_sel $end
 $var wire 3 Q io_out_QSV_0 $end
 $var wire 3 R io_out_QSV_1 $end
 $var wire 3 S io_out_QSV_2 $end
 $var wire 3 T io_out_QSV_3 $end
 $var wire 3 U io_out_QSV_4 $end
  $scope module muxLayer1 $end
   $var wire 3 ) io_in_QSV_1_5 $end
   $var wire 3 * io_in_QSV_1_4 $end
   $var wire 3 + io_in_QSV_1_7 $end
   $var wire 3 , io_in_QSV_1_6 $end
   $var wire 3 - io_in_QSV_1_1 $end
   $var wire 2 . io_in_sel $end
   $var wire 3 / io_in_QSV_1_0 $end
   $var wire 3 0 io_in_QSV_1_3 $end
   $var wire 3 1 io_in_QSV_1_2 $end
   $var wire 3 3 io_in_QSV_2_7 $end
   $var wire 3 9 io_in_QSV_0_6 $end
   $var wire 3 : io_in_QSV_2_4 $end
   $var wire 3 ; io_in_QSV_0_5 $end
   $var wire 3 < io_in_QSV_2_3 $end
   $var wire 3 = io_in_QSV_2_6 $end
   $var wire 3 > io_in_QSV_0_7 $end
   $var wire 3 ? io_in_QSV_2_5 $end
   $var wire 3 @ io_in_QSV_0_2 $end
   $var wire 3 A io_in_QSV_2_0 $end
   $var wire 3 B io_in_QSV_0_1 $end
   $var wire 3 C io_in_QSV_0_4 $end
   $var wire 3 D io_in_QSV_2_2 $end
   $var wire 3 E io_in_QSV_0_3 $end
   $var wire 3 F io_in_QSV_2_1 $end
   $var wire 3 G io_out_QSV_3 $end
   $var wire 3 H io_out_QSV_4 $end
   $var wire 3 I io_in_QSV_0_0 $end
   $var wire 3 J io_out_QSV_5 $end
   $var wire 3 K io_out_QSV_6 $end
   $var wire 3 L io_out_QSV_0 $end
   $var wire 3 M io_out_QSV_1 $end
   $var wire 3 N io_out_QSV_2 $end
   $var wire 3 O io_out_QSV_7 $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
02
04
06
b00 .
b000 S
b000 R
b000 U
b000 T
b000 G
b000 F
b000 I
b000 H
b000 C
b000 B
b000 E
b000 D
b000 O
b000 N
b000 Q
b000 K
b000 J
b000 M
b000 L
b000 7
b000 9
b000 8
b000 3
b000 5
b000 ?
b000 >
b000 A
b000 @
b000 ;
b000 :
b000 =
b000 <
b000 '
b000 &
b000 )
b000 (
b000 #
b000 "
b000 %
b000 $
b000 /
b00 P
b000 1
b000 0
b000 +
b000 *
b000 -
b000 ,
b000 !
$end
#0
14
#1
12
#6
b010 @
b001 B
b100 C
b010 D
b011 E
b100 F
b011 G
b100 H
b101 J
b110 K
b001 M
b010 N
b111 O
b001 R
b010 S
b011 T
b100 U
b100 !
b101 "
b110 #
b111 $
b001 &
b010 '
b011 (
b110 )
b100 *
b111 +
b101 ,
b010 -
b011 0
b001 1
02
b111 3
04
b101 5
b110 7
b111 8
b110 9
b001 :
b101 ;
b110 <
b011 =
b111 >
b101 ?
#11
12
#16
02
#21
12
#26
b01 P
02
b010 R
b001 S
b110 5
b101 7
b110 J
b101 K
b010 M
b01 .
b001 N
#31
12
#36
b110 G
b001 H
b101 J
b011 K
b100 M
b10 .
b010 N
b10 P
02
b100 R
b010 S
b110 T
b101 5
b001 U
b011 7
